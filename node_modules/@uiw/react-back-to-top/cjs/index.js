"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault")["default"];
var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard")["default"];
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = BackToUp;
var _objectSpread2 = _interopRequireDefault(require("@babel/runtime/helpers/objectSpread2"));
var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));
var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));
var _react = _interopRequireWildcard(require("react"));
var _jsxRuntime = require("react/jsx-runtime");
var _excluded = ["className", "prefixCls", "element", "top", "size", "strokeWidth", "smooth", "hideProgress", "children"];
var warpperStyle = {
  position: 'sticky',
  bottom: 15,
  right: 15,
  visibility: 'visible',
  opacity: 0,
  transition: 'visibility 0.3s linear 0s, opacity 0.3s linear 0s',
  cursor: 'pointer',
  userSelect: 'none'
};
var svgStyle = {
  display: 'block',
  transform: 'rotate(-90deg)'
};
var circleStyle = {
  transition: 'stroke-dashoffset 0.3s linear 0s'
};
var childStyle = {
  position: 'absolute',
  top: 0,
  display: 'flex',
  height: '100%',
  width: '100%',
  alignItems: 'center',
  justifyContent: 'center',
  color: '#fff',
  fontSize: 12
};
var documentElement = document.documentElement;
function BackToUp() {
  var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  var className = props.className,
    _props$prefixCls = props.prefixCls,
    prefixCls = _props$prefixCls === void 0 ? 'w-back-to-up' : _props$prefixCls,
    _props$element = props.element,
    element = _props$element === void 0 ? documentElement : _props$element,
    _props$top = props.top,
    top = _props$top === void 0 ? 120 : _props$top,
    _props$size = props.size,
    size = _props$size === void 0 ? 35 : _props$size,
    _props$strokeWidth = props.strokeWidth,
    strokeWidth = _props$strokeWidth === void 0 ? 3 : _props$strokeWidth,
    _props$smooth = props.smooth,
    smooth = _props$smooth === void 0 ? true : _props$smooth,
    _props$hideProgress = props.hideProgress,
    hideProgress = _props$hideProgress === void 0 ? false : _props$hideProgress,
    children = props.children,
    others = (0, _objectWithoutProperties2["default"])(props, _excluded);
  var $dom = (0, _react.useRef)(null);
  var cls = [className, prefixCls].filter(Boolean).join(' ');
  var style = Object.assign({}, warpperStyle, {
    position: element === documentElement ? 'fixed' : 'sticky'
  }, others.style, {
    width: size,
    height: size,
    opacity: top === 0 ? 1 : 0
  });
  var center = (0, _react.useMemo)(function () {
    return size / 2;
  }, [size]);
  var radius = (0, _react.useMemo)(function () {
    return size / 2 - strokeWidth / 2;
  }, [size, strokeWidth]);
  var dasharray = (0, _react.useMemo)(function () {
    return Math.PI * radius * 2;
  }, [radius]);
  var _useState = (0, _react.useState)(dasharray || 0),
    _useState2 = (0, _slicedToArray2["default"])(_useState, 2),
    progress = _useState2[0],
    setProgress = _useState2[1];
  var handleScroll = function handleScroll(ev) {
    var _ref = element || documentElement,
      clientHeight = _ref.clientHeight,
      scrollHeight = _ref.scrollHeight,
      scrollTop = _ref.scrollTop;
    var percentage = scrollTop / (scrollHeight - clientHeight);
    setProgress(dasharray - dasharray * percentage || 0);
    if ($dom.current && top > 0) {
      $dom.current.style.opacity = scrollTop > top ? '1' : '0';
    }
  };
  (0, _react.useEffect)(function () {
    var scrollElement = element === documentElement ? document : element;
    if (scrollElement) {
      scrollElement.addEventListener('scroll', handleScroll, {
        passive: true
      });
    }
    return function () {
      if (scrollElement) {
        scrollElement.removeEventListener('scroll', handleScroll);
      }
    };
  }, [element]);
  var goToUp = function goToUp(ev) {
    element.scrollTo({
      top: 0,
      behavior: smooth ? 'smooth' : 'auto'
    });
  };
  return /*#__PURE__*/(0, _jsxRuntime.jsxs)("div", (0, _objectSpread2["default"])((0, _objectSpread2["default"])({
    className: cls,
    ref: $dom
  }, others), {}, {
    onClick: goToUp,
    style: style,
    children: [!hideProgress && /*#__PURE__*/(0, _jsxRuntime.jsxs)("svg", {
      viewBox: "0 0 ".concat(size, " ").concat(size),
      width: size,
      height: size,
      focusable: "false",
      style: svgStyle,
      children: [/*#__PURE__*/(0, _jsxRuntime.jsx)("circle", {
        fill: "rgb(0 0 0 / 75%)",
        stroke: "rgb(200 200 200 / 85%)",
        strokeWidth: strokeWidth,
        r: radius,
        cx: center,
        cy: center
      }), /*#__PURE__*/(0, _jsxRuntime.jsx)("circle", {
        fill: "none",
        stroke: "rgb(0 0 0 / 50%)",
        strokeWidth: strokeWidth,
        r: radius,
        cx: center,
        cy: center,
        strokeDasharray: dasharray,
        strokeDashoffset: progress || 0,
        style: circleStyle
      })]
    }), children && /*#__PURE__*/(0, _jsxRuntime.jsx)("div", {
      style: childStyle,
      children: children
    })]
  }));
}
module.exports = exports.default;